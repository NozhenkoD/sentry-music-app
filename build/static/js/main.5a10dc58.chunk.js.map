{"version":3,"sources":["store/reducer/index.js","store/reducer/root.js","store/index.js","store/actions/root.js","containers/index.js","store/actions/getList.js","api/apiCatch.js","index.js"],"names":["createReducers","root","handleActions","SET_LIST","state","_ref","payload","Object","objectSpread","list","SET_LOADING","_ref2","loading","user","email","middlewares","thunk","logger","reducer","combineReducers","reducers","store","createStore","applyMiddleware","apply","setList","createAction","Search","Input","mapDispatch","getList","query","dispatch","getState","JSON","stringify","superagent","get","concat","set","end","error","response","storeStringify","Sentry","scope","setLevel","setUser","setExtra","apiCatch","body","data","Container","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","release","dsn","errorInfo","setState","console","log","keys","forEach","key","_this$props","react_default","a","createElement","className","type","onClick","undefined","onSearch","value","enterButton","skeleton","avatar","title","active","es_list","itemLayout","dataSource","locale","emptyText","renderItem","item","Item","Meta","src","artist","picture","description","name","Component","connect","rootElement","document","getElementById","ReactDOM","render","es","containers"],"mappings":"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","file":"static/js/main.5a10dc58.chunk.js","sourcesContent":["import root from \"./root\";\n\nexport const createReducers = { root };\n\nexport default createReducers;\n","import { handleActions } from \"redux-actions\";\n\nconst initialState = {\n  list: [],\n  loading: false,\n  user: {\n    email: \"john.doe@example.com\"\n  }\n};\n\nexport default handleActions(\n  {\n    SET_LIST: (state, { payload }) => ({ ...state, list: payload }),\n    SET_LOADING: (state, { payload }) => ({ ...state, loading: payload })\n  },\n  initialState\n);\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from 'redux-thunk';\n\n// import sagas from \"./actions\";\nimport reducers from \"./reducer\";\n\n// import reducer from \"./reducer\";\n\n// создаем saga мидлвар\n// монтируем его в Store\nconst middlewares = [thunk, logger];\nconst reducer = combineReducers(reducers);\nconst store = createStore(reducer, applyMiddleware(...middlewares));\n\n// затем запускаем сагу\n\nexport default store;\n","import { createAction } from \"redux-actions\";\n\nexport const setList = createAction(\"SET_LIST\");\nexport const setLoading = createAction(\"SET_LOADING\");\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, List, Skeleton, Avatar } from \"antd\";\nimport * as Sentry from \"@sentry/browser\";\nimport getList from \"../store/actions/getList\";\n\nconst Search = Input.Search;\n\nconst mapState = state => ({\n  list: state.root.list,\n  loading: state.root.loading\n});\n\nconst mapDispatch = {\n  getList\n};\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: true };\n\n    Sentry.init({\n      release: \"foo\",\n      dsn: \"https://fc0edcf6927a4397855797a033f04085@sentry.io/1417586\",\n      // integrations: [new Sentry.Integrations.RewriteFrames()]\n    });\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    console.log(\"error, errorInfo\", { error, errorInfo });\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n  }\n  render() {\n    const { list, loading, getList } = this.props;\n    const user = undefined;\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            console.log(user.email);\n          }}\n        >\n          test error1\n        </button>\n        <div onClick={() => Sentry.showReportDialog()}>Report feedback1</div>\n        <h1>Music Finder</h1>\n        <br />\n        <Search onSearch={value => getList(value)} enterButton />\n        {loading && <Skeleton avatar title={false} loading={true} active />}\n        {!loading && (\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={list}\n            locale={{ emptyText: <div /> }}\n            renderItem={item => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={<Avatar src={item.artist.picture} />}\n                  title={item.title}\n                  description={item.artist.name}\n                />\n              </List.Item>\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Container);\n","import { setList } from \"./root\";\nimport { apiCatch } from \"../../api/apiCatch\";\nimport superagent from 'superagent';\n\nexport default query => (dispatch, getState) => {\n  const state = JSON.stringify(getState());\n  superagent\n    .get(`https://deezerdevs-deezer.p.rapidapi.com/search?q=${query}`)\n    .set(\"X-RapidAPI-Key\", \"27a9ab42dbmshe61213a3b9e0010p1b74a0jsn4e642284a757\" + 1)\n    .end((error, response) => {\n      if (error) {\n        return apiCatch(error, getState)\n      }\n\n      if (response) {\n        return dispatch(setList(response.body.data));\n      }\n    });\n};\n","import * as Sentry from \"@sentry/browser\";\n\nexport const apiCatch = (error, getState) => {\n  const store = getState();\n  const storeStringify = JSON.stringify(store);\n  const { root: { user: { email } } } = store;\n\n  Sentry.configureScope(\n    scope => scope\n      .setLevel(\"Error\")\n      .setUser({ email })\n      .setExtra(\"store\", storeStringify)\n  );\n  Sentry.captureException(error);\n  return Sentry.showReportDialog();\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Container from \"./containers\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Container />\n  </Provider>\n);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}